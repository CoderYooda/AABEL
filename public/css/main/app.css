@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  border: 0;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

:focus,
:active {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

a {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  text-decoration: none;
}

a:-webkit-any-link {
  text-decoration: none;
}

ul {
  list-style: none;
}

img {
  -o-object-fit: cover;
     object-fit: cover;
  vertical-align: top;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  -webkit-tap-highlight-color: transparent;
}

img,
svg {
  width: 100%;
  height: auto;
}

address {
  font-style: normal;
}

input::-ms-clear {
  display: none;
}

button, input[type=submit] {
  display: inline-block;
  box-shadow: none;
  background-color: transparent;
  background: none;
  cursor: pointer;
}

input:focus, input:active,
button:focus, button:active {
  outline: none;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

@font-face {
  font-family: "Montserrat";
  font-display: swap;
  font-style: normal;
  src: url("/fonts/Montserrat/Montserrat-Regular.woff2") format("woff2"), url("/fonts/Montserrat/Montserrat-Regular.woff") format("woff"), url("/fonts/Montserrat/Montserrat-Regular.ttf") format("truetype");
  font-weight: 400;
}
@font-face {
  font-family: "Montserrat";
  font-display: swap;
  font-style: normal;
  src: url("/fonts/Montserrat/Montserrat-Bold.woff2") format("woff2"), url("/fonts/Montserrat/Montserrat-Bold.woff") format("woff"), url("/fonts/Montserrat/Montserrat-Bold.ttf") format("truetype");
  font-weight: 700;
}
html {
  width: auto;
  margin-right: calc(-1 * (100vw - 100%));
}

body {
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  transition: 0.3s;
}
body.locked {
  overflow: hidden;
}

body {
  background-color: #fff;
}
body::-webkit-scrollbar {
  width: 8px;
  background-color: transparent;
}
body::-webkit-scrollbar-thumb {
  border-radius: 5px;
  background-color: #33b5dd !important;
  border: 0.5px solid #2b2c2b !important;
}
body::-webkit-scrollbar-track {
  border-radius: 5px;
  background-color: transparent;
}

* {
  scrollbar-color: #33b5dd #fff; /*Цвет скролла, цвет ползунка*/
  scrollbar-width: thin; /*Толщина скролла thin, auto*/
}

.container {
  max-width: 1230px;
  width: 100%;
  margin: 0 auto;
  padding-right: 15px;
  padding-left: 15px;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.frame-version {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.frame-version::-webkit-scrollbar {
  width: 0px;
}

/**
 * Swiper 8.4.5
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2022 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: November 21, 2022
 */
@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal;
}
:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  touch-action: pan-y;
}
.swiper-pointer-events.swiper-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */
.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}
.swiper-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform, height;
}

.swiper-backface-hidden .swiper-slide {
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

/* 3D Effects */
.swiper-3d, .swiper-3d.swiper-css-mode .swiper-wrapper {
  perspective: 1200px;
}
.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  transform-style: preserve-3d;
}
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}
.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}
.swiper-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */
.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}
.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}
.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: "";
  flex-shrink: 0;
  order: 9999;
}
.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
          margin-inline-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  width: var(--swiper-centered-offset-after);
}
.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
          margin-block-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}
.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

.btn-filled {
  padding: 12px 20px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #fff;
  font-size: 16px;
  line-height: 16px;
  font-weight: 400;
  background-color: #33b5dd;
  border-radius: 8px;
  transition: 0.3s;
}
.btn-filled:hover, .btn-filled:focus {
  box-shadow: 0 0 30px -6px #33b5dd;
}
.btn-filled.danger {
  background-color: #d64751;
}
.btn-filled.disabled {
  opacity: 0.5;
  pointer-events: none;
}

.accordion.open .accordion__content-wrapper {
  opacity: 1;
}
.accordion.open .accordion__arrow {
  transform: rotate(180deg);
}
.accordion__control {
  display: flex;
  justify-content: space-between;
  gap: 30px;
  width: 100%;
  padding: 10px 15px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #fff;
  font-size: 20px;
  line-height: 36px;
  font-weight: 700;
  background-color: #33b5dd;
}
.accordion__control span {
  text-align: left;
}
.accordion__arrow {
  display: inline-block;
  min-width: 24px;
  transition: 0.3s;
}
.accordion__arrow svg path {
  stroke: #fff;
}
.accordion__content-wrapper {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  transition: 0.3s;
  will-change: max-height;
}
.accordion__content {
  padding: 20px 10px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #2b2c2b;
  font-size: 16px;
  line-height: 19px;
  font-weight: 400;
  border: 3px solid #33b5dd;
  border-radius: 0 0 20px 20px;
  box-shadow: inset 0 0 5px 5px #33b5dd;
}

.main-header {
  border-bottom: 20px dashed #33b5dd;
}
.main-header .container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding-top: 50px;
  padding-bottom: 20px;
  background-image: url("/images/header.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: 50% 0;
}
@media (min-width: 768px) {
  .main-header .container {
    background-size: contain;
  }
}
.main-header__logo {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 130px;
  height: 130px;
  background-color: #fff;
  border-radius: 50%;
  padding: 5px;
  filter: drop-shadow(1px 1px 2px rgba(43, 44, 43, 0.8));
  transition: 0.3s;
}
.main-header__logo:hover, .main-header__logo:focus {
  padding: 10px;
  filter: drop-shadow(1px 1px 5px rgba(43, 44, 43, 0.8));
}
.main-header__contacts {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 20px;
  margin-top: 40px;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 15px;
  -webkit-backdrop-filter: blur(60px);
          backdrop-filter: blur(60px);
}
.main-header__phone {
  display: inline-block;
  padding: 5px 15px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #2b2c2b;
  font-size: 20px;
  line-height: 36px;
  font-weight: 700;
  border-bottom: 3px solid transparent;
  border-radius: 15px;
  transition: 0.3s;
}
.main-header__phone:hover, .main-header__phone:focus {
  background-color: rgba(255, 255, 255, 0.8);
  box-shadow: 0 0 5px 2px rgba(255, 255, 255, 0.8);
}
@media (min-width: 992px) {
  .main-header__phone {
    font-size: 30px;
  }
}

.main-footer {
  padding-top: 50px;
  padding-bottom: 50px;
  background-color: #2b2c2b;
}
.main-footer .container {
  display: flex;
  display: grid;
  grid-template-columns: 1fr;
  gap: 30px;
}
@media (min-width: 768px) {
  .main-footer .container {
    grid-template-columns: 1fr 1fr;
  }
}
@media (min-width: 992px) {
  .main-footer .container {
    grid-template-columns: minmax(280px, 300px) minmax(280px, 1fr) minmax(280px, 300px);
  }
}
.main-footer__contact {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.main-footer__contact--1 {
  order: 0;
}
.main-footer__contact--2 {
  order: 1;
}
@media (min-width: 992px) {
  .main-footer__contact--2 {
    order: 2;
  }
}
.main-footer__contact-title {
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 30px;
  line-height: 36px;
  font-weight: 700;
}
.main-footer__text {
  margin-top: 10px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #fff;
  font-size: 18px;
  line-height: 22px;
  font-weight: 400;
}
.main-footer__phone {
  position: relative;
  display: inline-block;
}
.main-footer__phone:before {
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #fff;
  border-radius: 10px;
  transition: 0.3s;
}
.main-footer__phone:hover:before, .main-footer__phone:focus:before {
  background-color: #33b5dd;
}
.main-footer__map {
  order: 2;
  width: 100%;
  min-height: 300px;
  height: 100%;
  transition: 0.3s;
}
@media (min-width: 768px) {
  .main-footer__map {
    grid-column: 1/3;
  }
}
@media (min-width: 992px) {
  .main-footer__map {
    grid-column: 2/3;
    order: 1;
    min-height: 200px;
  }
}

.about {
  padding-top: 70px;
  padding-bottom: 30px;
}
@media (min-width: 768px) {
  .about {
    padding-top: 100px;
  }
}
.about .container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 50px;
}
.about__text {
  position: relative;
  flex: 1 1 50%;
}
.about__text:before {
  content: "";
  position: absolute;
  top: 30%;
  left: 0;
  z-index: -1;
  width: 100%;
  height: 520px;
  background-color: rgba(50, 181, 220, 0.0588235294);
  transform: rotate(10deg);
}
.about__title {
  position: relative;
  margin-bottom: 50px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 90px;
  line-height: 90px;
  font-weight: 700;
}
@media (min-width: 768px) {
  .about__title {
    margin-bottom: 70px;
    font-size: 150px;
    line-height: 150px;
  }
}
.about__title:before, .about__title:after {
  content: "";
  position: absolute;
  height: 5px;
  background-color: #33b5dd;
  border-radius: 10px;
}
@media (min-width: 768px) {
  .about__title:before, .about__title:after {
    height: 7px;
  }
}
.about__title:before {
  top: 102%;
  left: 10px;
  width: 250px;
  transform: rotate(2deg);
}
@media (min-width: 768px) {
  .about__title:before {
    width: 350px;
  }
}
.about__title:after {
  top: 120%;
  left: 40px;
  width: 280px;
  transform: rotate(4deg);
}
@media (min-width: 768px) {
  .about__title:after {
    width: 400px;
  }
}
.about__description {
  margin-top: 30px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #2b2c2b;
  font-size: 25px;
  line-height: 30px;
  font-weight: 400;
}
.about__description span {
  font-weight: 700;
}
.about__image {
  position: relative;
  display: none;
  flex: 1 1 50%;
  min-width: 280px;
  max-width: 500px;
}
@media (min-width: 768px) {
  .about__image {
    display: block;
  }
}
.about__image:before {
  content: "";
  position: absolute;
  top: 5%;
  left: 5%;
  border: 3px solid #33b5dd;
  width: 90%;
  height: 90%;
}
.about__image:after {
  content: "";
  position: absolute;
  top: 2%;
  left: 2%;
  border: 11px solid #33b5dd;
  width: 100%;
  height: 100%;
}

.dont-do {
  padding-top: 50px;
  padding-bottom: 50px;
}
@media (min-width: 768px) {
  .dont-do {
    padding-top: 100px;
  }
}
.dont-do .container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 50px;
}
.dont-do__text {
  flex: 1 1 50%;
  order: 0;
}
@media (min-width: 992px) {
  .dont-do__text {
    order: 1;
  }
}
.dont-do__title {
  position: relative;
  margin-bottom: 70px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 40px;
  line-height: 40px;
  font-weight: 700;
}
@media (min-width: 768px) {
  .dont-do__title {
    font-size: 60px;
    line-height: 60px;
  }
}
.dont-do__title:before, .dont-do__title:after {
  content: "";
  position: absolute;
  height: 4px;
  background-color: #33b5dd;
  border-radius: 10px;
}
.dont-do__title:before {
  top: 110%;
  left: 10px;
  width: 250px;
  transform: rotate(-2deg);
}
@media (min-width: 768px) {
  .dont-do__title:before {
    width: 350px;
  }
}
.dont-do__title:after {
  top: 130%;
  left: 40px;
  width: 280px;
  transform: rotate(-3deg);
}
@media (min-width: 768px) {
  .dont-do__title:after {
    width: 400px;
  }
}
.dont-do__list {
  position: relative;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  gap: 30px 90px;
  margin-top: 30px;
  padding-left: 70px;
  counter-reset: num;
  list-style-type: none;
}
.dont-do__list:before {
  content: "";
  position: absolute;
  top: 8%;
  left: 15%;
  width: 300px;
  height: 300px;
  background-color: rgba(50, 181, 220, 0.0588235294);
  border-radius: 50%;
}
.dont-do__list:after {
  content: "";
  position: absolute;
  top: 48%;
  left: 36%;
  width: 350px;
  height: 350px;
  background-color: rgba(50, 181, 220, 0.0588235294);
  border-radius: 0%;
  transform: rotate(57deg);
}
.dont-do__item {
  position: relative;
  flex: 1 1 250px;
  padding: 5px 5px 5px 10px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #2b2c2b;
  font-size: 15px;
  line-height: 20px;
  font-weight: 400;
}
.dont-do__item:before {
  content: counter(num);
  counter-increment: num;
  position: absolute;
  top: 0px;
  right: 100%;
  display: inline-block;
  width: 70px;
  padding: 5px;
  text-align: center;
  font-family: "Montserrat", Arial, sans-serif;
  color: #fff;
  font-size: 40px;
  line-height: 40px;
  font-weight: 700;
  background-color: #33b5dd;
}
.dont-do__item:nth-child(-n+9):before {
  content: "0" counter(num);
}
.dont-do__item:nth-child(n+10):before {
  content: counter(num);
}
.dont-do__image {
  position: relative;
  display: none;
  flex: 1 1 50%;
  order: 1;
  min-width: 280px;
  max-width: 500px;
}
@media (min-width: 768px) {
  .dont-do__image {
    display: block;
  }
}
@media (min-width: 992px) {
  .dont-do__image {
    order: 0;
  }
}
.dont-do__image:before {
  content: "";
  position: absolute;
  top: 5%;
  left: 5%;
  border: 3px solid #33b5dd;
  width: 90%;
  height: 90%;
}
.dont-do__image:after {
  content: "";
  position: absolute;
  top: 2%;
  left: -2%;
  border: 11px solid #33b5dd;
  width: 100%;
  height: 100%;
}

.blog {
  padding-top: 30px;
  padding-bottom: 50px;
}
@media (min-width: 768px) {
  .blog {
    padding-top: 50px;
  }
}
@media (min-width: 992px) {
  .blog {
    padding-top: 60px;
  }
}
.blog__title {
  position: relative;
  margin-bottom: 70px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 80px;
  line-height: 80px;
  font-weight: 700;
}
@media (min-width: 768px) {
  .blog__title {
    font-size: 100px;
    line-height: 100px;
  }
}
.blog__title:before, .blog__title:after {
  content: "";
  position: absolute;
  height: 4px;
  background-color: #33b5dd;
  border-radius: 10px;
}
@media (min-width: 768px) {
  .blog__title:before, .blog__title:after {
    height: 6px;
  }
}
.blog__title:before {
  top: 110%;
  left: 10px;
  width: 250px;
  transform: rotate(2deg);
}
@media (min-width: 768px) {
  .blog__title:before {
    width: 350px;
  }
}
.blog__title:after {
  top: 130%;
  left: 40px;
  width: 280px;
  transform: rotate(3deg);
}
@media (min-width: 768px) {
  .blog__title:after {
    width: 400px;
  }
}
.blog__list {
  position: relative;
  display: grid;
  grid-template-columns: 1fr;
  gap: 50px;
  margin-top: 100px;
}
@media (min-width: 992px) {
  .blog__list {
    grid-template-columns: repeat(2, 1fr);
  }
}
.blog__item {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding-bottom: 30px;
}
@media (min-width: 576px) {
  .blog__item {
    flex-direction: row;
  }
}
.blog__item:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 3px;
  background-color: #33b5dd;
  border-radius: 10px;
}
.blog__item .blog__article-image {
  position: relative;
  z-index: 2;
  min-width: 280px;
  max-width: 300px;
}
.blog__item .blog__article-title {
  position: relative;
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 25px;
  line-height: 30px;
  font-weight: 700;
}
@media (min-width: 576px) {
  .blog__item .blog__article-title--0:before {
    content: "";
    position: absolute;
    top: -30px;
    left: 120px;
    z-index: 1;
    width: 150px;
    height: 150px;
    background-color: rgba(50, 181, 220, 0.0588235294);
    border-radius: 50%;
  }
  .blog__item .blog__article-title--2:after {
    content: "";
    position: absolute;
    top: -70px;
    left: -60px;
    z-index: 1;
    width: 150px;
    height: 150px;
    background-color: rgba(50, 181, 220, 0.0588235294);
    border-radius: 0%;
    transform: rotate(57deg);
  }
}
.blog__item .blog__article-date {
  display: inline-block;
  margin-top: 5px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #2b2c2b;
  font-size: 12px;
  line-height: 15px;
  font-weight: 400;
}
.blog__item .blog__article-content {
  position: relative;
  max-height: 95px;
  margin-top: 30px;
  overflow: hidden;
}
.blog__item .blog__article-content:before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 45px;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff 50%);
}
.blog__item .blog__article-link {
  display: inline-block;
  margin-top: 30px;
}
@media (min-width: 992px) {
  .blog__item--2 {
    grid-row: 1/3;
    grid-column: 2/3;
    flex-direction: column;
    padding-left: 50px;
  }
  .blog__item--2:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 3px;
    height: calc(100% - 30px);
    background-color: #33b5dd;
    border-radius: 10px;
  }
  .blog__item--2:after {
    left: 50px;
    width: calc(100% - 50px);
  }
  .blog__item--2 .blog__article-image {
    max-width: 100%;
    max-height: 400px;
  }
  .blog__item--2 .blog__article-image img {
    height: 100%;
    -o-object-fit: contain;
       object-fit: contain;
  }
  .blog__item--2 .blog__article-title {
    font-family: "Montserrat", Arial, sans-serif;
    color: #33b5dd;
    font-size: 30px;
    line-height: 36px;
    font-weight: 700;
  }
  .blog__item--2 .blog__article-date {
    display: inline-block;
    font-family: "Montserrat", Arial, sans-serif;
    color: #2b2c2b;
    font-size: 14px;
    line-height: 16px;
    font-weight: 400;
  }
  .blog__item--2 .blog__article-content {
    max-height: 130px;
  }
}

.questions {
  padding-top: 50px;
  padding-bottom: 100px;
}
@media (min-width: 768px) {
  .questions {
    padding-top: 100px;
    padding-bottom: 140px;
  }
}
.questions__title {
  position: relative;
  margin-bottom: 60px;
  font-family: "Montserrat", Arial, sans-serif;
  color: #33b5dd;
  font-size: 60px;
  line-height: 60px;
  font-weight: 700;
}
@media (min-width: 768px) {
  .questions__title {
    margin-bottom: 90px;
    font-size: 80px;
    line-height: 80px;
  }
}
.questions__title:before, .questions__title:after {
  content: "";
  position: absolute;
  height: 4px;
  background-color: #33b5dd;
  border-radius: 10px;
}
@media (min-width: 768px) {
  .questions__title:before, .questions__title:after {
    height: 5px;
  }
}
.questions__title:before {
  top: 110%;
  left: 10px;
  width: 250px;
  transform: rotate(2deg);
}
@media (min-width: 768px) {
  .questions__title:before {
    width: 350px;
  }
}
.questions__title:after {
  top: 130%;
  left: 40px;
  width: 280px;
  transform: rotate(3deg);
}
@media (min-width: 768px) {
  .questions__title:after {
    width: 400px;
  }
}
.questions__list {
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
}
.questions__item {
  flex: 1 1 385px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/